{"componentChunkName":"component---src-templates-journal-tsx","path":"/journal/2021-02-18/","result":{"data":{"site":{"siteMetadata":{"title":"Raptazure","description":"Meditation","author":{"name":"raptazure","twitter":"https://twitter.com/raptazure","github":"https://github.com/raptazure"}}},"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"layout\": \"journal\",\n  \"title\": \"Existentialism?\",\n  \"date\": \"2021-02-18T00:00:00.000Z\",\n  \"tags\": [\"journal\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Thoughts\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Absurdism is the belief that a search for meaning is inherently in conflict with the actual lack of meaning, but that one should both accept this and simultaneously rebel against it by embracing what life has to offer.\")), mdx(\"p\", null, \"\\u5B87\\u5B99\\u4F3C\\u4E4E\\u5E76\\u6CA1\\u6709\\u76EE\\u7684\\uFF0C\\u6B63\\u56E0\\u4E3A\\u5982\\u6B64\\uFF0C\\u6211\\u4EEC\\u53EF\\u4EE5\\u81EA\\u7531\\u5730\\u9009\\u62E9\\u81EA\\u5DF1\\u6240\\u8BA4\\u540C\\u7684\\u300C\\u610F\\u4E49\\u300D\\u3002\"), mdx(\"p\", null, \"\\u4E0D\\u8981\\u5BB3\\u6015\\uFF0C\\u4E0D\\u8981\\u6127\\u759A\\uFF0C\\u4E07\\u7269\\u7684\\u7EC8\\u6781\\u5C06\\u5F52\\u4E8E\\u865A\\u7A7A\\uFF0C\\u800C\\u6C38\\u8FDC\\u4E5F\\u53EA\\u662F\\u95ED\\u4E0A\\u53CC\\u773C\\u7684\\u4E00\\u77AC\\u3002\"), mdx(\"p\", null, \"Everything is meaningless. Everything is meaningful. Embrace the Absurd. Be Free.\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Thoughts Absurdism is the belief that a search for meaning is inherently in conflict with the actual lack of meaning, but that one shouldâ€¦","fields":{"lang":"zh-Hans"},"frontmatter":{"title":"Existentialism?","date":"2021-02-18","tags":["journal"]}}},"pageContext":{"slug":"/journal/2021-02-18/"}},"staticQueryHashes":["2345487092"]}